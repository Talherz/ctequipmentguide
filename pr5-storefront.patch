diff --git a/components/cart-button.tsx b/components/cart-button.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/components/cart-button.tsx
@@ -0,0 +1,35 @@
+"use client";
+import Link from "next/link";
+import { useCart } from "@/components/cart-context";
+
+export default function CartButton() {
+  const { items } = useCart();
+  const count = items.reduce((n, it) => n + it.quantity, 0);
+  return (
+    <Link
+      href="/cart"
+      className="relative rounded-md border border-border px-3 py-2 text-sm hover:bg-accent hover:text-accent-foreground"
+      aria-label={`Cart with ${count} ${count === 1 ? "item" : "items"}`}
+    >
+      Cart
+      {count > 0 && (
+        <span className="absolute -right-2 -top-2 rounded-full bg-primary px-1.5 text-xs font-semibold text-primary-foreground">
+          {count}
+        </span>
+      )}
+    </Link>
+  );
+}
diff --git a/components/site-header.tsx b/components/site-header.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/components/site-header.tsx
@@ -0,0 +1,95 @@
+import Link from "next/link";
+import { createClient } from "@/lib/supabase/server";
+import CartButton from "@/components/cart-button";
+
+export default async function SiteHeader() {
+  const supabase = await createClient();
+  const { data } = await supabase.auth.getUser();
+  const user = data?.user;
+
+  return (
+    <header className="sticky top-0 z-40 w-full border-b border-border bg-background/80 backdrop-blur">
+      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 h-16 flex items-center gap-4">
+        {/* Left: logo + brand */}
+        <Link href="/" className="flex items-center gap-3 font-semibold">
+          {/* eslint-disable-next-line @next/next/no-img-element */}
+          <img
+            src="https://s201.q4cdn.com/326551073/files/doc_downloads/2022/05/CT-Brandmark-Standard-Primary-RGW-POS-RGB-1.png"
+            alt="CTC"
+            className="h-6 w-auto"
+          />
+          <span>CTC Equipment Store</span>
+        </Link>
+
+        {/* Demo-like left nav */}
+        <nav className="hidden md:flex items-center gap-3 ml-4">
+          <Link href="/products" className="rounded-md px-3 py-2 text-sm hover:bg-accent hover:text-accent-foreground">All</Link>
+          <Link href="/vendors" className="rounded-md px-3 py-2 text-sm hover:bg-accent hover:text-accent-foreground">Shop by Vendor</Link>
+          <Link href="/categories" className="rounded-md px-3 py-2 text-sm hover:bg-accent hover:text-accent-foreground">Shop by Category</Link>
+        </nav>
+
+        {/* Center: search */}
+        <form action="/products" className="ml-auto mr-auto hidden w-full max-w-md items-center sm:flex">
+          <input
+            name="q"
+            placeholder="Search for products…"
+            className="w-full rounded-md border border-border bg-background px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-primary"
+          />
+        </form>
+
+        {/* Right: cart + auth */}
+        <div className="ml-auto flex items-center gap-3">
+          <CartButton />
+          {!user ? (
+            <Link
+              href="/login"
+              className="rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground hover:bg-primary/90"
+            >
+              Sign in
+            </Link>
+          ) : (
+            <div className="relative group">
+              <button className="rounded-full border border-border px-3 py-2 text-sm hover:bg-accent hover:text-accent-foreground">
+                {user.email?.split("@")[0] ?? "Account"} ▾
+              </button>
+              <div className="invisible absolute right-0 mt-2 w-48 overflow-hidden rounded-md border border-border bg-popover text-popover-foreground opacity-0 shadow-lg transition group-hover:visible group-hover:opacity-100">
+                <Link href="/account" className="block px-4 py-2 text-sm hover:bg-accent hover:text-accent-foreground">Order History</Link>
+                <Link href="/account/profile" className="block px-4 py-2 text-sm hover:bg-accent hover:text-accent-foreground">Edit Profile</Link>
+                <form action="/auth/signout" method="post">
+                  <button type="submit" className="block w-full px-4 py-2 text-left text-sm hover:bg-accent hover:text-accent-foreground">
+                    Sign out
+                  </button>
+                </form>
+              </div>
+            </div>
+          )}
+        </div>
+      </div>
+    </header>
+  );
+}
diff --git a/app/layout.tsx b/app/layout.tsx
index 8b8b8b1..c7c7c7d 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -3,12 +3,14 @@ import { ThemeProvider } from "next-themes";
 import "./globals.css";
 import { GeistSans } from "geist/font/sans";
 import { ThemeSwitcher } from "@/components/theme-switcher";
 import { Toaster } from "@/components/ui/sonner";
 import { cn } from "@/lib/utils";
 import { CartProvider } from "@/components/cart-context";
+import SiteHeader from "@/components/site-header";
 
 export default function RootLayout({
   children,
 }: Readonly<{
   children: React.ReactNode;
 }>) {
   return (
     <html lang="en" suppressHydrationWarning>
       <body className={`${GeistSans?.className ?? ""} antialiased min-h-screen`}>
         <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
           <CartProvider>
+            <SiteHeader />
             {children}
             <Toaster />
           </CartProvider>
         </ThemeProvider>
       </body>
     </html>
   );
 }
diff --git a/app/page.tsx b/app/page.tsx
index 1111111..2222222 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,24 +1,29 @@
 import Link from "next/link";
 import { createClient } from "@/lib/supabase/server";
 
-function formatMoney(n: number | null) {
-  if (n == null) return "";
-  return Number(n).toLocaleString(undefined, { style: "currency", currency: "USD" });
-}
+function formatMoney(n: number | null) {
+  if (n == null) return "";
+  return Number(n).toLocaleString("en-CA", { style: "currency", currency: "CAD" });
+}
 
 export default async function HomePage() {
   const supabase = await createClient();
-  const [{ data: categories }, { data: vendors }, { data: products }] = await Promise.all([
+  const [{ data: categories }, { data: vendors }, { data: products }] = await Promise.all([
     supabase.from("categories").select("id,name").order("name", { ascending: true }),
     supabase.from("vendors").select("id,name").order("name", { ascending: true }),
     supabase
       .from("products")
       .select("id, slug, name, sku, price, image_url, vendor_id, category_id")
       .order("name", { ascending: true })
       .limit(12),
   ]);
 
   return (
     <main className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
+      {/* Categories rail like demo.vercel.store */}
       <div className="mb-6 flex items-center justify-between gap-4">
         <div className="flex min-w-0 items-center gap-2 overflow-x-auto">
           {(categories ?? []).map((c) => (
             <Link
               key={c.id}
               href={{ pathname: "/products", query: { category: String(c.id) } }}
               className="shrink-0 rounded-full border border-border px-3 py-1.5 text-xs font-medium hover:bg-accent hover:text-accent-foreground"
             >
               {c.name}
             </Link>
           ))}
         </div>
         <Link
           href="/products"
           className="rounded-md px-3 py-2 text-sm hover:bg-accent hover:text-accent-foreground"
         >
           View all →
         </Link>
       </div>
 
+      {/* Products first */}
       {products && products.length > 0 ? (
         <section className="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
           {products.map((p) => (
             <Link
               key={p.id}
               href={`/product/${p.slug}`}
               className="group relative overflow-hidden rounded-xl border border-border bg-background shadow-sm transition hover:shadow-md"
             >
               <div className="aspect-[4/3] w-full overflow-hidden bg-muted">
                 {/* eslint-disable-next-line @next/next/no-img-element */}
                 {p.image_url ? (
                   <img
                     src={p.image_url as string}
                     alt={p.name}
                     className="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
                   />
                 ) : (
                   <div className="flex h-full w-full items-center justify-center text-sm text-muted-foreground">
                     No image
                   </div>
                 )}
               </div>
 
               {p.price != null && (
                 <span className="absolute left-2 top-2 rounded-full bg-primary px-2.5 py-1 text-xs font-semibold text-primary-foreground shadow">
-                  {Number(p.price).toLocaleString(undefined, { style: "currency", currency: "USD" })}
+                  {formatMoney(p.price)}
                 </span>
               )}
 
               <div className="p-4">
                 <h3 className="line-clamp-2 text-sm font-medium">{p.name}</h3>
                 <p className="mt-1 text-xs text-muted-foreground">SKU: {p.sku ?? "—"}</p>
               </div>
             </Link>
           ))}
         </section>
       ) : (
         <div className="py-16 text-center text-muted-foreground">No products yet.</div>
       )}
 
+      {/* Vendors row */}
       {vendors && vendors.length > 0 && (
         <section className="mt-10">
           <h2 className="mb-4 text-lg font-semibold">Top Vendors</h2>
           <div className="flex flex-wrap gap-2">
             {vendors.map((v) => (
               <Link
                 key={v.id}
                 href={{ pathname: "/products", query: { vendor: String(v.id) } }}
                 className="rounded-full border border-border px-3 py-1.5 text-xs font-medium hover:bg-accent hover:text-accent-foreground"
               >
                 {v.name}
               </Link>
             ))}
           </div>
         </section>
       )}
     </main>
   );
 }
diff --git a/app/login/page.tsx b/app/login/page.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/app/login/page.tsx
@@ -0,0 +1,51 @@
+"use client";
+import { useState } from "react";
+import { createClient } from "@/lib/supabase/client";
+
+export default function LoginPage() {
+  const [email, setEmail] = useState("");
+  const [sent, setSent] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  async function onSubmit(e: React.FormEvent) {
+    e.preventDefault();
+    setError(null);
+    const supabase = createClient();
+    const { error } = await supabase.auth.signInWithOtp({
+      email,
+      options: { emailRedirectTo: `${location.origin}/` },
+    });
+    if (error) setError(error.message);
+    else setSent(true);
+  }
+
+  return (
+    <div className="mx-auto max-w-md px-6 py-16">
+      <h1 className="text-2xl font-semibold mb-2">Sign in</h1>
+      <p className="text-sm text-muted-foreground mb-6">We’ll email you a magic link to sign in.</p>
+      {sent ? (
+        <div className="rounded-md border border-border bg-muted p-4 text-sm">Check your inbox for the sign-in link.</div>
+      ) : (
+        <form onSubmit={onSubmit} className="space-y-4">
+          <input
+            type="email"
+            required
+            value={email}
+            onChange={(e) => setEmail(e.target.value)}
+            placeholder="you@example.com"
+            className="w-full rounded-md border border-border bg-background px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-primary"
+          />
+          <button type="submit" className="w-full rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground hover:bg-primary/90">
+            Send magic link
+          </button>
+          {error && <p className="text-sm text-destructive">{error}</p>}
+        </form>
+      )}
+    </div>
+  );
+}
diff --git a/app/auth/signout/route.ts b/app/auth/signout/route.ts
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/app/auth/signout/route.ts
@@ -0,0 +1,12 @@
+import { NextResponse } from "next/server";
+import { createClient } from "@/lib/supabase/server";
+
+export async function POST() {
+  const supabase = await createClient();
+  await supabase.auth.signOut();
+  const base = process.env.NEXT_PUBLIC_SITE_URL ?? "http://localhost:3000";
+  return NextResponse.redirect(new URL("/", base));
+}
diff --git a/app/vendors/page.tsx b/app/vendors/page.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/app/vendors/page.tsx
@@ -0,0 +1,37 @@
+import Link from "next/link";
+import { createClient } from "@/lib/supabase/server";
+
+export default async function VendorsPage() {
+  const supabase = await createClient();
+  const { data: vendors, error } = await supabase
+    .from("vendors")
+    .select("id,name")
+    .order("name", { ascending: true });
+  if (error) return <div className="p-6 text-destructive">Failed to load vendors.</div>;
+
+  return (
+    <main className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
+      <h1 className="text-2xl font-semibold mb-6">Shop by Vendor</h1>
+      <div className="grid gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
+        {(vendors ?? []).map((v) => (
+          <Link
+            key={v.id}
+            href={{ pathname: "/products", query: { vendor: String(v.id) } }}
+            className="group rounded-xl border border-border p-5 hover:bg-accent hover:text-accent-foreground"
+          >
+            <div className="mb-3 flex h-12 w-12 items-center justify-center rounded-full bg-muted text-sm font-semibold">
+              {v.name.slice(0, 2).toUpperCase()}
+            </div>
+            <div className="line-clamp-2 text-sm font-medium">{v.name}</div>
+          </Link>
+        ))}
+      </div>
+    </main>
+  );
+}
diff --git a/app/categories/page.tsx b/app/categories/page.tsx
new file mode 100644
index 0000000..e69de29
--- /dev/null
+++ b/app/categories/page.tsx
@@ -0,0 +1,37 @@
+import Link from "next/link";
+import { createClient } from "@/lib/supabase/server";
+
+export default async function CategoriesPage() {
+  const supabase = await createClient();
+  const { data: categories, error } = await supabase
+    .from("categories")
+    .select("id,name")
+    .order("name", { ascending: true });
+  if (error) return <div className="p-6 text-destructive">Failed to load categories.</div>;
+
+  return (
+    <main className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
+      <h1 className="text-2xl font-semibold mb-6">Shop by Category</h1>
+      <div className="grid gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
+        {(categories ?? []).map((c) => (
+          <Link
+            key={c.id}
+            href={{ pathname: "/products", query: { category: String(c.id) } }}
+            className="group rounded-xl border border-border p-5 hover:bg-accent hover:text-accent-foreground"
+          >
+            <div className="mb-3 flex h-12 w-12 items-center justify-center rounded-full bg-muted text-sm font-semibold">
+              {c.name.slice(0, 2).toUpperCase()}
+            </div>
+            <div className="line-clamp-2 text-sm font-medium">{c.name}</div>
+          </Link>
+        ))}
+      </div>
+    </main>
+  );
+}
